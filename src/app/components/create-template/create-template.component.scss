.top-section {
  display: flex;
  justify-content: space-between;
  background-color: #2196f3;
  padding: 10px;
  color: white;
  align-items: center;
}

.top-section .top-actions {
  display: flex;
  gap: 10px;
}

.search-bar {
  padding: 20px;
  display: flex;
  gap: 10px;
}
.editable-placeholder:empty::before {
  content: attr(data-placeholder);
  color: #aaa;
  font-weight: normal;
  pointer-events: none;
  user-select: none;
}

.modal {
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.4);
}
.resizable-container {
  resize: both;
  overflow: auto;
  min-width: 100px;
  min-height: 40px;
  padding: 4px;
}

.modal-content {
  background: white;
  padding: 20px;
  border-radius: 10px;
  min-width: 300px;
  position: relative;
}

.close-btn {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 20px;
  cursor: pointer;
}
.checkbox-field { user-select: text; }
.editable-label:focus { outline: 2px solid #90caf9; border-radius: 4px; }

.dashboard,
.form-builder {
  margin: 20px;
}
@media print {
  input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    border: 1px solid #222;
    width: 14px; height: 14px;
    display:inline-block; vertical-align:middle; position:relative;
  }
  input[type="checkbox"]:checked::after {
    content: '✓';
    position:absolute; left:1px; top:-1px;
    font-weight:700; font-size:14px; line-height:14px;
  }
}


/* Palette container */
.field-palette {
  width: 180px;           /* smaller width */
  background: #fafafa;
  border: 1px solid #ccc;
  padding: 8px;
  display: flex;
  flex-direction: column;
  gap: 6px;
  font-family: Arial, sans-serif;
  font-size: 12px;
  overflow-y: auto;
  max-height: 80vh;       /* limit height with scroll */
}
.palette-item {
  padding: 6px 8px;
  font-size: 12px;
  background-color: transparent;  /* no background */
  border: none;                   /* no border */
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);  /* very subtle shadow */
  border-radius: 0;
  cursor: grab;
  user-select: none;
  white-space: nowrap;
  width: 100%;
  text-align: left;
  transition: box-shadow 0.2s ease;
}

.palette-item:hover {
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15); /* slightly stronger shadow on hover */ } .field-item {
  display: flex; /* inline so it doesn't take full width */
  align-items:  flex-start;
  justify-content: center;
 background-color: #1e88e5; /* bright blue background */
  border: none; /* remove border */
  border-radius: 0; /* no rounded corners */
  padding: 4px 8px; /* smaller padding */
  cursor: grab;
  font-size: 14px;
  color: #333;
  user-select: none;
  transition: box-shadow 0.2s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* subtle shadow only */
  margin-bottom: 6px;
  gap: 6px;
  height: auto; /* auto height */
  overflow: visible;
  box-sizing: border-box;
  min-width: 60px;
}

.field-item:hover {
  box-shadow: 0 2px 6px rgba(30, 136, 229, 0.4); /* stronger blue shadow */
  color: #1565c0; /* darker blue text on hover */
  background: transparent;
}

.field-item textarea {
  height: 40px;      /* fixed height */
  resize: none;      /* disable manual resize */
  overflow-y: auto;  /* scroll if content overflows */
  flex-grow: 1;      /* take available space */
  min-width: 100px;  /* or adjust */
}

.field-item input,
.field-item select {
  flex-grow: 1;
  min-width: 100px;
}

.field-item label {
  flex-shrink: 0;
  margin-right: 10px;
  white-space: nowrap;
  max-width: 120px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.field-item .delete-icon {
  font-size: 16px;
  color: #d00;
  cursor: pointer;
  padding-left: 8px;
  user-select: none;
  font-weight: bold;
  line-height: 1;
}

.field-item input,
.field-item textarea,
.field-item select {
  width: 100%;
  padding: 6px 8px;
  font-size: 14px;
  border: 1.5px solid #ccc;
  border-radius: 6px;
  box-sizing: border-box;
  resize: both;
  min-height: 30px;
  margin: 0;
  display: block;
}
.form-row {
  position: absolute; /* keep if needed */
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
  padding:  10px 12px;
  box-sizing: border-box;
  background-color: #f9f9f9;
 border: 1px solid #ccc;
  border-radius: 6px;
  max-width: 350px;
  min-width: 160px;
  cursor: move;
  z-index: 10; 

  height: auto;

    flex-wrap: nowrap;
   
 transition: none 
  /* Optional: create new stacking context for smoother repaint */

}
.field-header {
  display: flex;
  align-items: center;
  justify-content: space-between; /* or flex-start if you want delete button elsewhere */

}
/* Ensure positioned surface is a containing block */
.page-surface,
.form-page-container,
.page-container {
  position: relative;
  background: #fff;
}


.field-textarea {
  flex: 1 1 auto;
  min-height: 60px;
  padding: 8px 10px;
  resize: vertical; /* allow vertical growth */
  width: 100%;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
  box-sizing: border-box;
}

/* When textarea is present, switch to vertical layout */ .form-row.textarea-row {
  flex-direction: column !important;
  align-items: stretch !important;
}

/* Label styling */
.form-label {
  flex-shrink: 0;
  width: 120px;
  margin-right: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
textarea.form-input {
  resize: both;            /* allow both horizontal and vertical resizing */
  min-width: 150px;        /* ensures it can grow horizontally */
  min-height: 80px;        /* ensures it can grow vertically */
  width: auto;             /* don’t fix width so it can expand */
  height: auto;            /* don’t fix height */
  overflow: auto;          /* add scrollbar if needed */
  box-sizing: border-box;
}
.form-row textarea,
.form-row input {
  flex-grow: 1;      /* take remaining space */
  min-width: 150px;  /* minimum width */
  max-width: calc(100% - 130px); /* prevent overflow */
  resize: vertical;  /* allow vertical resize */
  height: auto;
  white-space: normal;
}
.form-row textarea {
  resize: both;          /* Allow horizontal + vertical resize */
  min-width: 150px;      /* Minimum width */
  max-width: 100%;       /* Max width limited to container */
  min-height: 80px;      /* Minimum height */
  height: auto;          /* Auto height so it grows with content */
  flex-grow: 1;          /* Grow to fill available space */
  box-sizing: border-box;
  white-space: normal;
}
.drag-handle {
  cursor: move;
  font-size: 18px;
  user-select: none;
  touch-action: none;
}
.form-item {
  background: white;
  padding: 6px 8px;              /* smaller padding */
  margin: 4px 0;                 /* reduced vertical gap */
  border: 1px solid #ccc;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  transition: none;
}

.delete-btn {
  flex: 0 0 30px; /* fixed width */
  background: #d32f2f;
  color: white;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* Delete button hover effect */
.delete-btn:hover {
  background-color: #343a40;
}

.field-item textarea {
  min-height: 50px;
}
.form-builder-wrapper {
  position: relative; /* positioning context */
  overflow: visible;  /* allow popup to overflow */
}


.draggable-field {
  position: absolute;
  cursor: move;
  user-select: none;
  padding: 10px;
  background: #e3f2fd;
  border-radius: 4px;
  border: 1px solid #90caf9;
  width: auto;
  height: auto;
  box-sizing: border-box;
  min-height: 60px;
  display: flex;
  align-items: center;
}
.form-row.signature-field {
  min-width: 360px;  /* 300px signature + 36px delete + padding */
  min-height: 180px; /* enough height for signature */ } .field {
  position: absolute;
  padding: 6px 10px;
  background: white;
  border: 1px solid #999;
  cursor: move;
}
.form-canvas {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 12px;
  padding: 16px;
  background-color: #fff;
  border: 2px dashed #ccc;
  border-radius: 0px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
  flex: 1 1 auto;
  width: 100%;
  min-height: 1000px;   /* Start safe */
  max-height: 4000px;   /* Limit to avoid infinite scroll issues */
  overflow-x: auto;       /* Enable scroll */
  box-sizing: border-box;
}
.field {
  position: absolute;
  padding: 6px 10px;
  background: white;
  border: 1px solid #999;
  cursor: move;
}
.form-field {

  display: flex;
  flex-direction: column;
  align-items: flex-start; /* better alignment for label+input */
  min-width: 220px;
  max-width: 100%;
  flex-shrink: 1;           /* prevent shrinking */
  flex-grow: 0;             /* no automatic grow */
  gap: 6px;
  padding: 6px 10px;
  border: 1px solid #ccc;
  border-radius: 6px;
  background: #fff;
  box-sizing: border-box;
  font-size: 14px;
  cursor: default;
}
.resizable {
  position: relative;
  display: inline-block;
  border: 1px solid #ccc;
  background: #fff;
  box-sizing: border-box;
}

.resize-handle {
  position: absolute;
  width: 14px;
  height: 14px;
  right: 0;
  bottom: 0;
  background: #666;
  cursor: se-resize;
  z-index: 10;
}
.description-field {
  resize: both;               /* ✅ Manual vertical & horizontal resizing */
  overflow: auto;
  min-width: 100px;
  min-height: 60px;
  max-width: 300px;           /* Optional cap */
  width: 150px;
  height: 60px;
  box-sizing: border-box;
  font-size: 14px;
  padding: 6px 10px;
  display: inline-block;      /* ✅ Needed to stay inline in flex */
}
.description-field label {
  flex-shrink: 0;
  width: 120px;  /* fixed width label */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.description-field textarea {
  flex-grow: 1;     /* take remaining space */
  flex-shrink: 1;   /* allow shrinking */
  min-width: 0;     /* critical for flexbox to shrink properly */
  min-height: 80px;
  resize: vertical;
  padding: 8px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 6px;
  /* REMOVE width: 100%; */
}
.form-field.full-width {
  width: 100%;
}
.form-field label {
  font-weight: 500;
  font-size: 13px;
  color: #333;
  margin: 0;
  flex-grow: 1;
  user-select: none;
}

.form-field input,
.form-field textarea {
  font-size: 14px;
  padding: 6px 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  flex-grow: 1;
  margin-left: 8px;
  box-sizing: border-box;
}

.form-field textarea {
  min-height: 80px;
}
.form-field .delete-icon {
  font-size: 16px;
  color: #d00;
  cursor: pointer;
  padding-left: 8px;
  user-select: none;
  font-weight: bold;
  line-height: 1;
}

.actions,
.pagination {
  text-align: center;
  margin-top: 15px;
}

.drag-preview {
  padding: 8px;
  background-color: #ffffff;
  border: 1px dashed #2196f3;
  color: #000;
  font-weight: 500;
  border-radius: 4px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); } .signature-pad-container {
  position: relative;
  width: 300px; /* or field.width */
  height: 160px; /* just above canvas height */
  padding: 12px;
  box-sizing: border-box;
  background: #fefefe;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.signature-pad-container canvas {
  border: 2px dashed #007BFF;
  border-radius: 6px;
  width: 100% !important;
  height: 150px !important;
  cursor: crosshair;
  display: block;
  margin-bottom: 10px;
}
.clear-sign-btn, .delete-sign-btn {
    position: absolute;
    top: 8px;
  width: 36px;
  height: 36px;
  min-width: 36px !important;
  min-height: 36px !important;
  background-color: #f44336;
  color: white;
  transition: background-color 0.3s ease; } .clear-sign-btn {
  position: absolute;
  top: 5px;
  right: 45px;
  z-index: 20;
  width: 36px;
  height: 36px;
  background-color: #f44336; /* red */
  color: white;
  cursor: pointer;
}


.clear-sign-btn:hover {
  background-color: #d32f2f;
}

.delete-btn {
  flex-shrink: 0;
  width: 36px;
  height: 36px;
  margin-left: 8px;
  background-color: #6c757d;
  color: white;
  cursor: pointer;
}

.delete-sign-btn:hover {
  background-color: #343a40;
}
.editable-div.placeholder::before {
  content: attr(data-placeholder);
  color: #aaa;
}

.editable-div {
  min-height: 30px;
  padding: 6px 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 16px;
  white-space: pre-wrap;
  position: relative;
  background-color: white;
  outline: none;
}

.editable-div:empty::before {
  content: attr(data-placeholder);
  color: #aaa;
  pointer-events: none;
  position: absolute;
  left: 10px;
  top: 6px;
}

.editable-div[contenteditable="true"]:empty:before {
  font-style: italic;
}

.editable-div:focus {
  border-color: #007bff;
  box-shadow: 0 0 3px #007bff;
}

.editable-div.has-value:empty::before {
  display: none;
}

.editable-div[contenteditable="true"]:empty {
  color: #aaa;
}

.editable-div[contenteditable="true"]:not(:empty) {
  color: #333;
}

.editable-div[contenteditable="true"]:focus {
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); }

.editable-div[contenteditable="true"] {
  cursor: text;
}

.drag-placeholder {
  padding: 8px;
  background-color: #e0e0e0;
  border: 1px dashed #aaa;
  border-radius: 4px;
  color: transparent;
}

.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0,0,0,0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;

  pointer-events: auto; /* 🔁 Allow mouse events to pass through */
}

.popup {
  pointer-events: auto; /* ✅ Only modal should accept pointer events */
  background: white;
  padding: 16px;
  border-radius: 8px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
  max-width: 400px;
  width: 90vw;
  max-height: 90vh;
  overflow-y: auto;
}


.popup input,
.popup select {
  display: block;
  width: 100%;
}
.popup form .mat-form-field {
  width: 100%;
  max-width: 100%;
}

.main-content {
  display: flex;
  width: 100%;
  height: calc(100vh - 60px); /* subtract header height */
  gap: 16px;
  box-sizing: border-box;
}

.form-page {
  width: fit-content;
}

.form-grid {
  display: block;
  flex-wrap: wrap;
  gap: 15px;
  align-items: stretch;
  justify-content: flex-start;
  max-width: 100%;
}

.form-grid canvas {
  cursor: crosshair;
}

.element-card {
  max-width: 400px;
}

.form-grid-item {
  width: 100%;
  min-width: fit-content;
  box-sizing: border-box;
  border: 1px solid #ccc;
  padding: 10px 10px 0 10px;
}

.form-grid-item input,
.form-grid-item select,
.form-grid-item textarea {
  margin: 10px;
  border: none;
  border-bottom: 1.5px solid #000;
  height: 25px;
  border-radius: 2px;
  padding: 5px;
  font-size: 14px;
}

.form-grid-item button.delete-btn {
  margin-left: 8px;
  background-color: #f44336;
  border: none;
  color: white;
  padding: 6px 12px;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  flex-shrink: 0;
}

.form-grid-item button.delete-btn:hover {
  background-color: #d32f2f;
}

.canvas-field {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 6px;
  border: 1px solid #ddd;
  border-radius: 5px;
  background: white;
  margin: 6px 0;
}

.canvas-field label {
  display: block;
  font-size: 13px;
  margin-bottom: 4px;
}

.canvas-field input,
.canvas-field textarea {
  width: 100%;
  font-size: 13px;
  padding: 6px;
  border-radius: 4px;
  border: 1px solid #ccc;
}

.field-box {
  display: flex;
  flex-direction: column;
  gap: 6px;
  width: 220px;
  padding: 12px 16px;
  background-color: #ffffff;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  font-size: 14px;
  color: #333;
  cursor: move;
  user-select: none;
  transition: box-shadow 0.2s ease-in-out, transform 0.1s ease-in-out; }

.field-box:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transform: scale(1.01);
}

.field-box .top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.field-box .top-bar label {
  font-size: 13px;
   margin: 0;
  color: #333;
}

.field-box .delete-icon {
  font-size: 14px;
  color: #d00;
  cursor: pointer;
  line-height: 1;
  padding: 0;
  margin: 0;
}

.field-box input,
.field-box textarea {
  width: 100%;
  font-size: 13px;
  padding: 5px 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin: 0;
}
*, *::before, *::after {
  box-sizing: border-box;
}
/* For textarea fields inside .form-row, stack vertically */ .form-row textarea.form-input {
  flex-grow: 1;
  min-width: 150px;
  max-width: 100%;
  min-height: 80px;
  resize: both;
  padding: 8px;
  font-size: 14px;
  border-radius: 6px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  margin-top: 0;
  overflow: auto;
}

/* Stack label + textarea vertically for description fields */ .form-row textarea.form-input, .form-row textarea.form-input + label, .form-row textarea.form-input ~ label, .form-row label {
  display: block;
  width: 100%;
  margin-right: 0;
  margin-bottom: 6px;
}

.form-row:has(textarea.form-input) {
  flex-direction: column !important;
  align-items: stretch !important;
}

/* If :has() is not supported, add a class in Angular when field.type==='textarea' */
/* e.g. <div class="form-row textarea-row"> */ .form-row.textarea-row {
  flex-direction: column !important;
  align-items: stretch !important;
}

/* Label styling for textarea */
.form-row.textarea-row .form-label {
  width: auto;
  margin-bottom: 6px;
  white-space: normal;
  font-weight: 600;
}

.form-label {
  flex-grow: 1;
  margin: 0 8px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-weight: 600;
  color: #333;
}

.form-row.description-field textarea.form-input {
  width: auto !important;  /* allow horizontal grow */
  min-width: 150px;
  max-width: none;
  flex-grow: 1;
  resize: both;            /* allow both vertical and horizontal resize */
  margin-top: 0;
}

/* Optional: add some padding and border to textarea for better UX */ textarea.form-input {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 14px;
  font-family: inherit;
}
@media (max-width: 600px) {
  .description-field {
    flex-direction: column !important;
  }

  .description-field label {
    width: auto;
    margin-bottom: 6px;
  }
}

.page-navigation {
  display: flex;
  flex-direction: column;
  gap: 8px;
  min-width: 150px;
}
.desc-free { max-width: none !important; }
.form-row { position: absolute; box-sizing: border-box; }
.rh { position: absolute; pointer-events: auto; }

/* Edge bars inside the field */
.rh-n, .rh-s { left: 6px; right: 6px; height: 6px; }
.rh-e, .rh-w { top: 6px; bottom: 6px; width: 6px; }

.rh-n { top: 2px;    cursor: ns-resize; }
.rh-s { bottom: 2px; cursor: ns-resize; }
.rh-e { right: 2px;  cursor: ew-resize; }
.rh-w { left: 2px;   cursor: ew-resize; }

/* Corner squares */
.rh-ne, .rh-nw, .rh-se, .rh-sw {
  width: 10px; height: 10px; background: rgba(0,0,0,0.25);
}
.rh-ne { top: 2px;    right: 2px;  cursor: nesw-resize; }
.rh-nw { top: 2px;    left: 2px;   cursor: nwse-resize; }
.rh-se { bottom: 2px; right: 2px;  cursor: nwse-resize; }
.rh-sw { bottom: 2px; left: 2px;   cursor: nesw-resize; }
/* ---- Checkbox field: keep options in one row ---- */
.form-row .checkbox-field .checkbox-options-row {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  column-gap: 24px;
  row-gap: 8px;
}

/* Each option inline with its box + label text */
.form-row .checkbox-field .checkbox-options-row label {
  display: inline-flex !important;
  align-items: center;
  gap: 6px;
  margin: 0;
  width: auto;
  white-space: nowrap;
}

/* Critical: neutralize the global .form-row input rule for checkboxes */
.form-row .checkbox-field input[type="checkbox"] {
  flex: 0 0 auto !important;
  width: auto !important;
  min-width: 0 !important;
  max-width: none !important;
  margin: 0 !important;
}
/* Grow only text-ish controls */
.form-row input:not([type="radio"]):not([type="checkbox"]),
/* generic textareas (not the problem description one) */
.form-row textarea:not(.desc-input) {
  flex-grow: 1;
  max-width: calc(100% - 130px);
  resize: vertical;
}

/* Reset radios & checkboxes so they stay compact */
.form-row input[type="radio"],
.form-row input[type="checkbox"] {
  flex-grow: 0 !important;
  min-width: auto !important;
  max-width: none !important;
  width: auto !important;
  margin: 0; /* keep tight */
}

/* (Nice to have) make radio options wrap inside the box */
.radio-field .radio-options {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 8px 24px;
  max-width: 100%;
}
.radio-field .radio-options label {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  margin: 0;
  white-space: nowrap;
}

/* Optional: clip any accidental overflow from the field box itself */
.form-row { overflow: hidden; }
.list-legend {
  display: grid;
  grid-template-columns: 1fr 240px 1fr 90px;
  gap: 12px;
  align-items: center;
  margin: 8px 0 6px;
  padding: 6px 8px;
  color: #607d8b;
  font-weight: 600;
  font-size: 12px;
}

/* rows */
.saved-list { list-style: none; margin: 0; padding: 0; }
.saved-row {
  display: grid;
  grid-template-columns: 1fr 240px 1fr 90px;
  gap: 12px;
  align-items: center;
  padding: 8px 8px;
  border-bottom: 1px solid #eef2f7;
}
.saved-row:hover { background: #fafcff; }

.cell.name { font-weight: 500; min-width: 220px; }
.cell.badges { display: flex; gap: 6px; flex-wrap: wrap; }
.cell.actions { display: flex; justify-content: flex-end; }

/* compact pill select */
.branch-compact.mat-mdc-form-field {
  --mdc-outlined-text-field-container-shape: 999px;
  min-width: 220px;
}
.branch-compact .mat-mdc-text-field-wrapper { height: 32px; }
.branch-compact .mat-mdc-form-field-infix { min-height: 32px !important; padding: 0 10px !important; }

/* badges */
.badge {
  padding: 2px 8px;
  border-radius: 999px;
  background: #eef2ff;
  color: #3949ab;
  font-size: 12px;
  border: 1px solid #e3e7ff;
  white-space: nowrap;
}

/* responsive */
@media (max-width: 900px) {
  .list-legend, .saved-row {
    grid-template-columns: 1fr;
    gap: 6px;
  }
  .cell.actions { justify-content: flex-start; }
}
.saved-forms-list ul li {
  grid-template-columns: 1fr 180px 140px auto; /* ⬅ narrower columns */
  gap: 8px;                /* less horizontal space */
  padding: 4px 6px;        /* reduce vertical padding */
  min-height: 32px;        /* enforce shorter row */
  font-size: 12.5px;       /* slightly smaller text */
}
.saved-forms-list ul li mat-form-field {
  --mdc-outlined-text-field-container-height: 32px; /* ⬅ shrink Material field */
  --mdc-outlined-text-field-container-shape: 8px;
  --mat-select-trigger-text-size: 12px;
}

.saved-forms-list ul li button {
  min-height: 26px !important;
  line-height: 22px !important;
  font-size: 11.5px !important;
  padding: 0 8px !important; /* ⬅ tighter buttons */
}

.branch-badges .badge {
  padding: 1px 5px;
  font-size: 11px;
}
.saved-forms-card {
  margin: 16px;              /* ⬅ add space around card */
  border-radius: 8px;        /* ⬅ rounded corners */
  overflow: hidden;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  background: #fff;
}

.card-header {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 10px 16px;
  border-bottom: 1px solid #eef2f7;
  background: #fff;
}
.card-header h2 { margin: 0; font-size: 16px; font-weight: 600; }
.card-header .spacer { flex: 1 1 auto; }

.table-wrap {
  background: #fff;
}

/* Make Material table compact */
.saved-forms-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 13px;          /* smaller text */
}

.saved-forms-table .sticky {
  position: sticky;
  top: 0;
  z-index: 1;
  background: #f8fafc;
  box-shadow: inset 0 -1px 0 #e6ebf1;
}
.saved-forms-table th.mat-mdc-header-cell {
  background: #f8fafc;
  color: #475569;
  font-weight: 600;
  font-size: 12.5px;
  border-bottom: 1px solid #e5e7eb;
}
.saved-forms-table td.mat-mdc-cell {
  border-bottom: 1px solid #f1f5f9;
}
.saved-forms-table .mat-mdc-form-field {
  margin: 0;
  font-size: 12.5px;
}
.saved-forms-table .mat-mdc-text-field-wrapper {
  height: 32px;   /* reduce select height */
}


/* Template cell truncation */
.template-cell {
  max-width: 420px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Compact select (32px tall) */
.compact-select.mat-mdc-form-field {
  --mdc-outlined-text-field-container-height: 32px;
  --mdc-outlined-text-field-outline-color: #d7dbe3;
  --mdc-outlined-text-field-hover-outline-color: #bfc6d4;
  --mdc-outlined-text-field-focus-outline-color: #3f51b5;
  min-width: 190px;
}
.compact-select .mat-mdc-form-field-infix { padding: 0 10px !important; }
.compact-select .mat-mdc-text-field-wrapper { height: 32px; }
.compact-select .mat-mdc-select-trigger { height: 32px; font-size: 12.5px; }

/* Chips for 'Current' column */
.chip-row { display: flex; gap: 6px; flex-wrap: wrap; }
.chip {
  background: #eef4ff;
  border: 1px solid #d9e4ff;
  color: #2b3a67;
  border-radius: 999px;
  padding: 2px 8px;
  font-size: 11.5px;
  line-height: 18px;
}

/* Small buttons */
.saved-forms-table button.mat-mdc-button-base {
  min-height: 28px;
  line-height: 24px;
  padding: 0 8px;
  font-size: 12.5px;
}
.saved-forms-table .chip {
  font-size: 11px;
  padding: 1px 6px;
  line-height: 16px;
  border-radius: 8px;
}
/* Empty state row */
.saved-forms-table tr.empty td {
  text-align: center;
  padding: 18px 12px !important;
  color: #64748b;
}
.saved-forms-table th.mat-mdc-header-cell,
.saved-forms-table td.mat-mdc-cell {
  padding: 4px 8px !important;   /* tighter padding */
  height: 32px;                  /* smaller row height */
  line-height: 1.3;
}
.saved-forms-table .actions-cell {
  display: flex;
  gap: 6px;
  align-items: center;
  justify-content: flex-end;
}

.saved-forms-table button {
  min-height: 28px;
  line-height: 24px;
  font-size: 12px;
}
.saved-forms-table {
  --mat-table-row-item-size: 40px;          /* row height */
  --mat-table-header-row-height: 40px;      /* header height */
  font-size: 13px;
}

/* Right-aligned icons on the same row */
.saved-forms-table .actions-cell {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 6px;
}

/* Make the “All Branches” select compact and the same height as the row */
.compact-select {
  width: 220px;                /* tweak as you like */
  margin: 0;
}

.compact-select .mat-mdc-form-field-subscript-wrapper {
  display: none;               /* hide hint/error space */
}

/* shrink the outlined field */
.compact-select .mat-mdc-text-field-wrapper {
  height: 32px;                /* control overall height */
  padding: 0 8px;              /* inner horizontal padding */
  display: flex;
  align-items: center;
}

/* remove default big inner padding */
.compact-select .mat-mdc-form-field-infix {
  padding: 0 !important;
  min-height: 32px !important;
  display: flex;
  align-items: center;
}

/* keep the value vertically centered */
.compact-select .mat-mdc-select-trigger,
.compact-select .mat-mdc-select-value {
  height: 32px;
  line-height: 32px;
}

/* slightly round the box */
.compact-select.mat-mdc-form-field {
  --mdc-outlined-text-field-container-shape: 8px;
}

/* optional: smaller icon buttons */
.saved-forms-table .mat-mdc-icon-button {
  width: 32px;
  height: 32px;
}
.saved-forms-table tr.mat-mdc-row .actions-cell .mat-mdc-icon-button { opacity: 0.35; }
.saved-forms-table tr.mat-mdc-row:hover .actions-cell .mat-mdc-icon-button { opacity: 1; }
.simple-grid {
  width: 100%;
  border-collapse: collapse;
}
.simple-grid th, .simple-grid td {
  border: 1px solid #e0e0e0;
  padding: 6px 8px;
  font-size: 13px;
}
.simple-grid thead th {
  background: #f7f9ff;
  font-weight: 600;
}
.actions-col { width: 40px; text-align: center; }
.grid-actions { margin-top: 8px; }
.grid-field {
  width: 100% !important;
  height: 100% !important;
}
.form-row.compact {
  padding: 6px;            /* was larger */
}

.inline-field {
  position: relative;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  background: #fff;
  padding: 8px;
  box-sizing: border-box;
  overflow: hidden; /* keep input inside */
}

.inline-label {
  display: block;
  font-weight: 600;
  margin: 0 0 6px 0;
  white-space: nowrap;       /* no “Email / Field” wrapping */
}

.inline-input {
  position: absolute;        /* free placement */
  padding: 6px 10px;
  border: 1px solid #bbb;
  border-radius: 6px;
  cursor: grab;
  z-index: 1;
}
.inner-widget {
  position: absolute;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 8px;
  border: 1px dashed #bbb;
  border-radius: 6px;
  background: #fff;

  /* native resize handle in bottom-right */
  resize: both;
  overflow: hidden;         /* required for resize */
  box-sizing: border-box;
}
.free-tag{
  position: absolute;
  z-index: 5;
  background: rgba(255,255,255,.95);
  padding: 2px 6px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-weight: 600;
  cursor: move;
  user-select: none;
  pointer-events: auto;   // ensure it's draggable over controls
}
.free-tag .req{ color:#d32f2f; }
/* the row that holds number + textarea + delete button */


/* the textarea itself */

.email-inline-row{
  display: grid;
  grid-template-columns: 24px max-content minmax(80px, max-content) 32px;
  align-items: center;
  gap: 4px;
}
.email-inline-row > *{ min-width: 0; }
/* drag on the left */
.email-inline-drag{
  cursor: move;
  user-select: none;
  display:flex; align-items:center; justify-content:center;
  font-size: 18px; line-height: 1;
}
.email-input {
  display: inline-block;     /* obeys width */
/* JS can set px width */
  min-width: 80px;
  box-sizing: border-box;
}

/* keep label tidy */
.email-inline-row .editable-label {
  white-space: nowrap;
  margin: 0;
}
.email-delete{
  background: transparent;
  border: none;
  color: #d32f2f;
  cursor: pointer;
  font-size: 18px;
  line-height: 1;
  padding: 0 6px;               /* feels like a small button */
}

/* let the input flex; prevent the whole row from dragging when clicking it */



/* 1) Let the input decide its own width inside the wrap */



.resizable-email {
  display: block;
  box-sizing: border-box;
  min-width: 80px;
  padding-right: 38px; /* space for delete + corner grip */
}


.inline-resize-wrap .form-input{
  min-width: 120px;         /* prevent collapsing */
  max-width: 100%;          /* don't overflow its cell */
  box-sizing: border-box;
}




.email-inline-delete { height: 100%; aspect-ratio: 1/1; }
.delete-resize-wrap {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: auto;            /* don't force tall block */
  min-width: 0;
}
/* keep email row items aligned in the middle */
.form-row .email-inline-row{
  align-items: center !important;              /* beats the earlier “stretch” */
  --h: 32px;                                   /* control height */
}

/* make label the same height as the input */
.form-row .email-inline-row .editable-label{
  display: inline-flex;
  align-items: center;
  height: var(--h);
  line-height: var(--h);
  margin: 0;
}
.form-row .email-inline-row{ height:100%; }            /* row fills the card */
.email-inline-row .inline-resize-wrap{ height:100%; }  /* wrapper fills row  */





.email-inline-delete {
  border: 0 !important;          /* remove rounded box */
  background: transparent !important;
  width: auto !important;         /* don't fill the cell */
  height: auto !important;
  padding: 0 6px;
  color: #d32f2f;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}
/* bottom corners for diagonal resize (optional) */
.corner-grip{ position:absolute; width:10px; height:10px; bottom:0; z-index:3; background:transparent; }
.corner-grip::after{
  content:''; position:absolute; width:6px; height:6px;
  right:1px; bottom:1px; border-right:2px solid rgba(0,0,0,.25); border-bottom:2px solid rgba(0,0,0,.25);
}


.grip-sw::after{ right:auto; left:1px; transform:scaleX(-1); }

/* delete button styling (keep minimal) */
.email-inline-delete{ border:0; background:transparent; padding:0 6px; line-height:1; }

.delete-resize-wrap .inline-grip{ width:6px; opacity:.2; right:0; left:auto; }

.delete-resize-wrap .inline-grip::after {
  content: '';
  position: absolute;
  right: 3px; top: 20%; bottom: 20%;
  width: 2px;
  background: rgba(0,0,0,.15);
  border-radius: 2px;
}

/* (optional) make the email row a bit tighter inside the box */
.form-row .email-inline-row { margin-top: 0; }


.form-row.desc-box{
  display: grid !important;
  grid-template-columns: 1.4ch 1fr max-content; /* narrow number column */
  column-gap: 8px;
  align-items: start;
  justify-items: start;   /* left-align items inside cells */
  position: static !important;
  padding: 0 !important;
  background: transparent !important;
  border: 0 !important;
  box-shadow: none !important;
}
/* the wrapper that the ✕ anchors to */
.desc-wrap {
    display: inline-flex ;
  position: relative;
  flex: 1 1 auto;
  min-width: 200px;
  display: inline-block;
    align-items: flex-start;
}
.desc-wrap > .desc-input {
  width: 100%;
  min-height: 40px;
  resize: both;          /* textarea adjustable */
  box-sizing: border-box;
    max-width: none;   
      flex: 1 1 auto;
}

.desc-wrap > .desc-close {
  position: absolute;
  top: 6px;
  right: 6px;
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
}
/* keep delete area the same vertical rhythm as others */
.delete-resize-wrap{
  height: auto;            /* don’t force 32px block */
  align-items: center;     /* vertical center */
}

/* optional: make the grip slimmer and less visible */
.delete-resize-wrap .inline-grip{
  width: 6px;
  opacity: .2;
}

.form-row.desc-box .form-label,
.form-row.desc-box label { 
  display: none !important;
}
.form-row.desc-box .mat-icon-button,
.form-row.desc-box .delete-btn{
  flex: 0 0 36px;
  width: 36px; height: 36px;
  align-self: flex-start;
  margin-left: 6px;
  position: relative;
  z-index: 2;
}
.form-row.desc-box textarea{ max-width: none !important; }

/* hide any global drag/resize handles inside desc rows */
.form-row.desc-box .rh{ display: none !important; }
.form-row textarea:not(.desc-input) { flex-grow: 1; }
/* make sure the row doesn't clip the resize handle */

.form-row.desc-box .desc-wrap { flex: 1 1 auto; position: relative; }
.form-row.desc-box .desc-input { width: 100%; box-sizing: border-box; resize: both; }

/* inside edges */
.form-row > .rh{ position:absolute; z-index:5; pointer-events:auto; }
.form-row > .rh-n { top:    2px !important; left:50%; transform:translateX(-50%); cursor:ns-resize; }
.form-row > .rh-s { bottom: 2px !important; left:50%; transform:translateX(-50%); cursor:ns-resize; }
.form-row > .rh-e { right:  2px !important; top:50%;  transform:translateY(-50%); cursor:ew-resize; }
.form-row > .rh-w { left:   2px !important; top:50%;  transform:translateY(-50%); cursor:ew-resize; }

/* inside corners */
.form-row > .rh-ne{ top:    2px !important; right: 2px !important; cursor:nesw-resize; }
.form-row > .rh-nw{ top:    2px !important; left:  2px !important; cursor:nwse-resize; }
.form-row > .rh-se{ bottom: 2px !important; right: 2px !important; cursor:nwse-resize; }
.form-row > .rh-sw{ bottom: 2px !important; left:  2px !important; cursor:nesw-resize; }

/* override any earlier rules that pushed them outside */
.form-row .rh-se,
.form-row .rh-sw,
.form-row .rh-ne,
.form-row .rh-nw { box-shadow:none; }

/* keep desc rows special (no outer handles there) */
.form-row.desc-box .rh{ display:none !important; }

/* Remove any global clamps that fight growth */
.form-row textarea { max-width: none !important; }


.form-row textarea.desc-input,
.form-field textarea.desc-input { min-height: 0 !important; }

/* Don't steal events from the textarea's resize corner */
.form-row .rh-n,
.form-row .rh-s,
.form-row .rh-e,
.form-row .rh-w {
   display: none !important;
}

/* Keep corners clickable, but park them slightly outside the box */
.form-row .rh-se { bottom: -8px; right: -8px; pointer-events: auto; }
.form-row .rh-sw { bottom: -8px; left:  -8px; pointer-events: auto; }
.form-row .rh-ne { top:    -8px; right: -8px; pointer-events: auto; }
.form-row .rh-nw { top:    -8px; left:  -8px; pointer-events: auto; }

/* Compact Description box */
.form-row.description-field textarea.desc-input {
  min-height: 36px !important;
  height: 36px !important;       /* fixed start height */
  max-height: 120px;              /* optional cap */
  resize: both;              /* still let user stretch vertically */
  line-height: 1.3;
  padding: 6px 8px;
  overflow: auto;
}
/* Make the "1." label narrow and remove extra left margin on the textarea */
.form-row.description-field .form-label {
  width: auto !important;     /* stop reserving 120px */
  min-width: 18px;            /* just enough for “1.” */
  margin-right: 6px;          /* small gap only */
}

.form-row.description-field .desc-input,
.form-row.description-field textarea {
  margin-left: 0 !important;  /* kill global margin */
  max-width: calc(100% - 40px); /* optional: fit better next to the number */
}
/* Optional if using <ol> */
.description-list {
  list-style-position: inside;
  padding-left: 0.8em;        /* much smaller default indent */
}
/* Compact layout:  number | textarea | delete */
.form-row.description-field {
  display: grid !important;
  grid-template-columns: max-content 1fr max-content; /* "1." | box | X */
  align-items: start;
  column-gap: 8px;            /* tiny gap only */
}

/* Kill any fixed label widths/margins in this row */
.form-row.description-field .form-label,
.form-row.description-field .inline-label,
.form-row.description-field [class*="label"] {
  width: auto !important;
  min-width: 0 !important;
  margin: 0 6px 0 0 !important;
}

/* Prevent global margins/width caps pushing the box away */
.form-row.description-field textarea,
.form-row.description-field input {
  margin-left: 0 !important;
  max-width: none !important;
}

/* If you use <ol><li> for numbering, tighten list indent too */
.form-row.description-field ol { list-style-position: inside; padding-left: 0 !important; margin: 0; }
.form-row.description-field li { display: contents; } /* let grid place children */
.desc-row{
  display: grid;
  grid-template-columns: 1.4ch 1fr max-content;
  align-items: start;
  gap: 8px;
}

/* 2) Flatten the inner wrapper so its children (textarea + button) can occupy grid cells */
.form-row.desc-box{
  display: contents !important;
}

/* 3) Ensure the delete button participates in layout (not absolute) */
.desc-close{
  position: static !important;
  margin: 0 !important;
  width: 36px;
  height: 36px;
  align-self: start;   /* keeps it aligned with the top of the textarea */
}

/* (nice to have) textarea sizing */
.desc-input{
  min-height: 40px;
  resize: vertical;    /* keep it adjustable */
  width: 100%;
  box-sizing: border-box;
}


/* 3) Input just fills the wrapper; never compute from 100% of the outer card */
.email-inline-row .resizable-email{
  position: relative;
  z-index: 1;
  box-sizing: border-box;

  /* own the size now */
  width: var(--w, 220px) !important;        /* ← moved from wrapper */
  height: var(--h, 32px) !important;        /* ← moved from wrapper */

  /* keep your margins & padding */
  margin-left:  var(--left, 0px);
  margin-right: var(--right, 8px);
  padding-right: 28px;                      /* room for ✕ / grip */
}
.delete-resize-wrap{
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;                 /* matches the last grid column */
  height: var(--h, 32px);
}
.email-inline-delete{
  width: 24px;
  height: 24px;
  padding: 0;
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent !important;
  border: 0 !important;
  color: #d32f2f;
}
/* move the delete inside the input’s border */
.email-inline-delete.inside {
  position: absolute;
  top: 50%;
  right: 20px; /* leaves room for grip */
  transform: translateY(-50%);
  width: 18px;
  height: 18px;
  border: 0;
  background: transparent;
  color: #d32f2f;
  cursor: pointer;
  z-index: 4;
}

.edge-grip.inner {
  position: absolute;
  top: 0; bottom: 0;
  width: 10px;
  cursor: ew-resize;
  z-index:11;}
.edge-grip.inner.right{ right:2px; }
.edge-grip.inner.left { left:2px;  }

/* inner corners (frozen) */
.corner-grip.inner{ position:absolute; width:12px; height:12px; z-index: 12; background:transparent; }
.corner-grip.inner.se{ right:2px; bottom:2px; cursor:nwse-resize; }
.corner-grip.inner.sw{ left: 2px; bottom:2px; cursor:nesw-resize; }

/* simple corner visuals */
.corner-grip.inner.se::after,
.corner-grip.inner.sw::after{
  content:''; position:absolute; width:6px; height:6px; bottom:1px;
  border-bottom:2px solid rgba(0,0,0,.25);
}
.corner-grip.inner.se::after{ right:1px;  border-right:2px solid rgba(0,0,0,.25); }
.corner-grip.inner.sw::after{ left: 1px;  border-left: 2px solid rgba(0,0,0,.25); }

.inline-resize-wrap > .edge-grip:not(.inner),
.inline-resize-wrap > .corner-grip:not(.inner){
  display: none !important;
}
/* Grip lines */
.edge-grip::after{
  content: '';
  position: absolute;
  top: 20%; bottom: 20%;
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  border-radius: 2px;
  background: rgba(0,0,0,.18);
}
 /* a touch more outside so it’s easy to grab */



/* Corner grips (if you use them) */

.grip-se{
  right: calc(var(--right, 8px) + 4px); /* inside the input by ~4px */
  bottom: 4px;                           /* sit on the bottom border */
  cursor: nwse-resize;
  z-index: 4;
}
.grip-sw{ left:  var(--left, 0px);   cursor:nesw-resize; }

/*
.inline-grip, .edge-grip{
  position: absolute;
  top: 0; bottom: 0;
  width: 10px;
  user-select: none;
  cursor: ew-resize;
  z-index: 2;
}
.grip-left  { left:  -4px; right: auto; }
.grip-right { right: -4px; left:  auto; }
*/




.inline-resize-wrap .corner-grip::after,
.inline-resize-wrap .grip-se::after {
  content: '';
  position: absolute;
  right: 1px;
  bottom: 1px;
  width: 6px;
  height: 6px;
  border-right: 2px solid rgba(0,0,0,.25);
  border-bottom: 2px solid rgba(0,0,0,.25);
}
.email-input-shell {
  position: relative;
  overflow: visible;
  box-sizing: border-box;
  min-height: 28px;              /* keeps tiny heights usable */
}

/* Input always fills shell, so grips (anchored to shell) stay aligned */
.resizable-email {
  display: block;
  width: 100% !important;
  height: 100% !important;
  box-sizing: border-box;
  min-width: 80px;
  padding-right: 38px; /* room for ✕ + corner */
}
.email-inline-row.inner-controls{
  /* remove the old, empty 4th grid column (32px) */
  grid-template-columns: 24px max-content minmax(80px, max-content);
}
.email-inline-row,
.email-inline-row .inline-resize-wrap {
  overflow: visible !important;
  position: relative;            /* create a safe anchoring context */
}

/* If any old “right column” pieces still render, hide them */
.email-inline-row.inner-controls .delete-resize-wrap,
.email-inline-row.inner-controls .inline-grip{
  display: none !important;
}

/* Let the input column size tightly to the shell */
.email-inline-row.inner-controls .inline-resize-wrap{
  width: auto;
  max-width: none;
}
.email-inline-row .inline-resize-wrap{
  width: auto !important;
  max-width: none !important;
  flex: 0 0 auto !important;
  overflow: visible !important;
  padding: 0 !important;
}

/* hide any legacy outer grips/column if still present */
.email-inline-row .delete-resize-wrap,
.email-inline-row .edge-grip:not(.inner),
.email-inline-row .corner-grip:not(.inner){
  display: none !important;
}
.right-grip {
  position: absolute;
  top: 50%;
  right: 0;                    /* anchored to the inside edge */
  transform: translateY(-50%); /* perfectly centered on the side */
  width: var(--grip);
  height: 28px;                /* any visible height you like */
  cursor: ew-resize;
  box-sizing: border-box;
  pointer-events: auto;
}

/* Bottom-right corner grip (square inside the corner) */
.corner-grip {
  position: absolute;
  right: 0;                    /* inside corner */
  bottom: 0;                   /* inside corner */
  width: var(--grip);
  height: var(--grip);
  cursor: nwse-resize;
  box-sizing: border-box;
  pointer-events: auto;
}

/* Optional visual styling so you can see them */
.right-grip,
.corner-grip {
  background: rgba(0,0,0,.06);
  border: 1px solid #bbb;
  border-radius: 2px;
}
:root { --grip: 12px; }        /* one place to change size */

.inner-widget { padding-right: calc(8px + var(--grip)); } 

.email-input-shell{
  position: relative;             /* <- anchor for all grips */
 
  box-sizing: border-box;
  overflow: visible;              /* let grips sit on the border */
}

/* input always fills the shell; leave space for X + corner */
.email-input-shell .resizable-email{
  display: block;
  width: 100% !important;
  height: 100% !important;
  min-width: 80px;
  box-sizing: border-box;
  padding-right: 40px;            /* room for delete + corner */
  z-index: 1;
}

/* Right/Left edge grips – pinned inside the shell edge */
.email-input-shell .edge-grip.inner{
  position: absolute;
  top:4px; bottom:4px;    
  width: 10px;
  cursor: ew-resize;
  z-index: 12;
 
}
.email-input-shell .edge-grip.inner.right{ right: 4px; }
.email-input-shell .edge-grip.inner.left { left:  4px; }

/* Bottom corners – pinned inside bottom border */
.email-input-shell .corner-grip.inner{
  position: absolute;
  width: 12px; height: 12px;
  z-index: 13;
  background: transparent;
}
.email-input-shell .corner-grip.inner.se{ right: 4px; bottom: 4px; cursor: nwse-resize; }
.email-input-shell .corner-grip.inner.sw{ left:  px; bottom: 2px; cursor: nesw-resize; }

/* small visual so you can see the grips */
.email-input-shell .edge-grip.inner::after{
  content: ""; position: absolute; top: 20%; bottom: 20%; left: 50%;
  transform: translateX(-50%);
  width: 2px; border-radius: 2px; background: rgba(0,0,0,.18);
}
.email-input-shell .corner-grip.inner::after{
  content:''; position:absolute; right:1px; bottom:1px; width:6px; height:6px;
  border-right:2px solid rgba(0,0,0,.25);
  border-bottom:2px solid rgba(0,0,0,.25);
}

/* Delete sits *inside* the input, not in a separate grid column */
.email-inline-row.inner-controls{ grid-template-columns: 24px max-content minmax(80px, max-content); }
.email-inline-row.inner-controls .inline-resize-wrap{
  width: auto !important; max-width: none !important; overflow: visible !important; padding: 0 !important;
}
.email-inline-delete.inside{
  position: absolute; top: 50%; right: 20px; transform: translateY(-50%);
  width: 18px; height: 18px; border: 0; background: transparent; color: #d32f2f; z-index: 14;
}

/* ===== Neutralize legacy/global grip rules that pushed things outside ===== */
/* Hide any non-inner grips for this row */
.email-inline-row.inner-controls .edge-grip:not(.inner),
.email-inline-row.inner-controls .corner-grip:not(.inner),
.email-inline-row.inner-controls .delete-resize-wrap{
  display: none !important;
}
.inner-widget { overflow: visible; }
/* kill any outer/card handles for this row so only inner grips show */
.no-outer-handles .rh,
.no-outer-handles .rh-n, .no-outer-handles .rh-s,
.no-outer-handles .rh-e, .no-outer-handles .rh-w,
.no-outer-handles .rh-ne, .no-outer-handles .rh-nw,
.no-outer-handles .rh-se, .no-outer-handles .rh-sw,
.no-outer-handles .resize-handle, .no-outer-handles .corner-handle {
  display: none !important;
}

/* if the outer widget uses native CSS resize, disable it for this row */
.no-outer-handles .inner-widget { resize: none !important; }
.email-inline-row .email-input-shell .edge-grip.inner{
  position: absolute;
  top: 4px; bottom: 4px;
  width: 8px;
  cursor: ew-resize;
  z-index: 12;
}
.email-inline-row .email-input-shell .edge-grip.inner.right{ right: 4px !important; }
.email-inline-row .email-input-shell .edge-grip.inner.left { left:  4px !important; }

.email-inline-row .email-input-shell .corner-grip.inner{
  position: absolute;
  width: 10px; height: 10px;
  z-index: 13;
  background: transparent;
}
.email-inline-row .email-input-shell .corner-grip.inner.se{ right: 4px !important; bottom: 4px !important; cursor: nwse-resize; }
.email-inline-row .email-input-shell .corner-grip.inner.sw{ left:  4px !important; bottom: 4px !important; cursor: nesw-resize; }

/* make sure the row doesn’t clip them */
.email-inline-row, .email-inline-row .inline-resize-wrap { overflow: visible !important; }

/* disable any outer/card handles for this row */
.email-inline-row.no-outer-handles .rh,
.email-inline-row.no-outer-handles [class^="rh-"],
.email-inline-row.no-outer-handles .resize-handle,
.email-inline-row.no-outer-handles .corner-handle { display: none !important; }
.email-inline-row .email-input-shell{
  position: relative;
  box-sizing: border-box;
  overflow: visible;
  border: 1px solid #ccc;              /* visual border on shell */
  border-radius: 4px;
  background: #fff;
}

/* input fills shell; no separate border */
.email-inline-row .email-input-shell .resizable-email{
  width: 100% !important;
  height: 100% !important;
  box-sizing: border-box;
  border: 0 !important;                /* important: remove input border */
  background: transparent;
  padding: 6px 40px 6px 10px;          /* room for × + SE corner */
  z-index: 1;
}

/* --- HIDE ANY OUTER/NON-INNER HANDLES JUST FOR THIS ROW --- */
.email-inline-row.inner-controls .right-grip:not(.inner),
.email-inline-row.inner-controls .corner-grip:not(.inner),
.email-inline-row.inner-controls .delete-resize-wrap{
  display: none !important;
}

/* --- PIN INNER GRIPS INSIDE THE BOX (INSET BY 4PX) --- */
.email-inline-row .email-input-shell .edge-grip.inner{
  position: absolute;
  top: 4px; bottom: 4px;               /* not on the border line */
  width: 8px;
  cursor: ew-resize;
  z-index: 12;
}
.email-inline-row .email-input-shell .edge-grip.inner.right{ right: 4px !important; }
.email-inline-row .email-input-shell .edge-grip.inner.left { left:  4px !important; }

.email-inline-row .email-input-shell .corner-grip.inner{
  position: absolute;
  width: 10px; height: 10px;
  z-index: 13;
  background: transparent;
}
.email-inline-row .email-input-shell .corner-grip.inner.se{ right: 4px !important; bottom: 4px !important; cursor: nwse-resize; }
.email-inline-row .email-input-shell .corner-grip.inner.sw{ left:  4px !important; bottom: 4px !important; cursor: nesw-resize; }

/* minor visuals so you can see them */
.email-inline-row .email-input-shell .edge-grip.inner::after{
  content: ""; position: absolute; top: 20%; bottom: 20%; left: 50%;
  transform: translateX(-50%); width: 2px; border-radius: 2px; background: rgba(0,0,0,.18);
}
.email-inline-row .email-input-shell .corner-grip.inner::after{
  content:''; position:absolute; right:1px; bottom:1px; width:6px; height:6px;
  border-right:2px solid rgba(0,0,0,.25); border-bottom:2px solid rgba(0,0,0,.25);
}

/* ensure nothing clips them */
.email-inline-row,
.email-inline-row .inline-resize-wrap{ overflow: visible !important; }
.date-inline-row .editable-label { 
  display: inline-flex !important; 
  align-items: center; 
  white-space: nowrap; 
}

/* row layout like email */
.date-inline-row{
  display: grid;
  grid-template-columns: 24px max-content minmax(120px, max-content);
  align-items: center;
  gap: 4px;
}
.date-inline-row, .date-inline-row .inline-resize-wrap{ overflow: visible !important; }

/* shell is the visible box; input fills it (same as email) */
.input-shell{
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  overflow: visible;
  border: 1px solid #ccc;
  border-radius: 4px;
  background: #fff;
  min-height: 28px;
}
.input-shell .resizable-input{
  width: 100% !important;
  height: 100% !important;
  border: 0 !important;
  background: transparent;
  box-sizing: border-box;
  padding: 6px 40px 6px 10px;
   padding-right: 40px;  /* keep space for SE corner/× if you add it */
}

/* inside grips */
.input-shell .edge-grip.inner{
  position: absolute;
  top: 4px; bottom: 4px;
  width: 8px; cursor: ew-resize; z-index: 12;
}
.input-shell .edge-grip.inner.right{ right: 4px; }
.input-shell .edge-grip.inner.left { left:  4px; }

.input-shell .corner-grip.inner{
  position: absolute;
  width: 10px; height: 10px; z-index: 13; background: transparent;
}
.input-shell .corner-grip.inner.se{ right: 4px; bottom: 4px; cursor: nwse-resize; }
.input-shell .corner-grip.inner.sw{ left:  4px; bottom: 4px; cursor: nesw-resize; }

/* optional: tiny visuals on grips */
.input-shell .edge-grip.inner::after{
  content:""; position:absolute; top:20%; bottom:20%; left:50%;
  transform:translateX(-50%); width:2px; border-radius:2px; background:rgba(0,0,0,.18);
}
.input-shell .corner-grip.inner::after{
  content:""; position:absolute; right:1px; bottom:1px; width:6px; height:6px;
  border-right:2px solid rgba(0,0,0,.25); border-bottom:2px solid rgba(0,0,0,.25);
}

/* hide any outer/non-inner grips on this row */
.date-inline-row.inner-controls .right-grip:not(.inner),
.date-inline-row.inner-controls .corner-grip:not(.inner){ display:none !important; }
.no-outer-handles .rh, .no-outer-handles .corner-handle{ display:none !important; }
.input-shell .inline-delete.inside{
  position: absolute;
  top: 2px;
  right: 2px;
  width: 28px;
  height: 28px;
  border: 0;
  background: transparent;
  font-size: 18px;
  line-height: 1;
  color: #d32f2f;
  cursor: pointer;
  z-index: 15;            /* above the input/select */
  pointer-events: auto;   /* ensure it’s clickable */
}
.input-shell .inline-delete.inside:hover{ opacity: .85; }
.input-shell .edge-grip.inner,
.input-shell .corner-grip.inner { z-index: 30; }   /* > delete z-index */

/* Easier to grab */
.input-shell .edge-grip.inner { width: 12px; }     /* was 8px */
.input-shell .corner-grip.inner { width: 12px; height: 12px; }

/* Keep a 10px “free” band at the far right for resizing */
.input-shell { padding-right: 44px; }              /* room for × + free band */
.input-shell .inline-delete.inside { right: 12px; }/* move × off the edge */

/* While resizing, ignore delete clicks (optional but nice) */
.input-shell .inline-delete.inside { z-index: 15; pointer-events: auto; }
.input-shell.resizing .inline-delete.inside { pointer-events: none; }
/* --- Size helpers for Angular Material buttons (MDC) --- */
.btn-xs.mat-mdc-button-base{
  height: 28px !important;
  min-height: 28px !important;
  line-height: 28px !important;
  padding: 0 12px !important;
  font-size: 12px !important;
  font-weight: 700;
}
.btn-sm.mat-mdc-button-base{
  height: 32px !important;
  min-height: 32px !important;
  line-height: 32px !important;
  padding: 0 14px !important;
  font-size: 13px !important;
}
/* optional larger sizes later…
.btn-md.mat-mdc-button-base{ height: 36px !important; padding: 0 16px !important; }
*/

/* rounded pill */
.btn-pill.mat-mdc-button-base{ border-radius: 9999px !important; }

/* --- Green filled style for raised buttons --- */
.btn-green.mat-mdc-raised-button{
  /* MDC tokens (works across Angular Material v15+) */
  --mdc-protected-button-container-color: #16a34a;
  --mdc-protected-button-label-text-color: #fff;

  /* hard fallback in case theme tokens are ignored */
  background-color: #16a34a !important;   /* green-600 */
  color: #fff !important;
  box-shadow: var(--mat-elevation-2, 0 2px 4px rgba(0,0,0,.15));
}
.btn-green.mat-mdc-raised-button:hover{ filter: brightness(.97); }
.btn-green.mat-mdc-raised-button:active{ transform: translateY(.5px); }

/* Make sure the toolbar stays draggable but the button doesn't */
.desc-head-free{ cursor: move; }
.desc-head-free .btn-add{ cursor: pointer; pointer-events: auto; }

/* If any legacy handle sneaks in inside the header, hide it */
.desc-head-free .drag-handle{ display:none !important; }
.desc-inline-row{
  display:grid;
  grid-template-columns: 24px 1fr max-content max-content;
  align-items:center;
  gap:8px;
}
.desc-inline-drag{ cursor:move; user-select:none; font-size:18px; line-height:1; }

/* little red × */
.desc-inline-delete{
  width:24px; height:24px; padding:0;
  border:0; background:transparent;
  color:#d32f2f; font-size:18px; line-height:1;
  cursor:pointer; border-radius:4px;
}
.desc-inline-delete:hover{
  color:#b71c1c; background:rgba(211,47,47,.08);
}

/* keep label from pushing buttons off-screen */
.desc-inline-row .editable-label{
  min-width:0; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;
}

/* your small green add button (from before) */
.btn-xs.mat-mdc-button-base{
  height:28px!important; min-height:28px!important; line-height:28px!important;
  padding:0 12px!important; font-size:12px!important; font-weight:700;
}
.btn-pill.mat-mdc-button-base{ border-radius:9999px!important; }
.btn-green.mat-mdc-raised-button{
  background:#16a34a!important; color:#fff!important;
}
.desc-row {
  display: grid;
  grid-template-columns: 1.4ch 1fr;
  align-items: start;
  gap: 8px;
}

.desc-no { text-align: right; line-height: 28px; }

/* Wrapper anchors the absolute delete button */
.desc-wrap {
  position: relative;
  display: block;
  width: 100%;
}

/* The textarea itself */
.desc-input {
  display: inline-block !important;  /* ✅ allows horizontal resize to be visible */
  width: auto !important;            /* ✅ let browser calculate, don’t force */
  min-width: 180px;                  /* safe starting width */
  max-width: none !important;        /* don’t clamp */
  min-height: 40px;
  resize: both !important;           /* ✅ horizontal + vertical resize */
  box-sizing: border-box;
  padding: 6px 32px 6px 10px;        /* keep your padding */
  overflow: auto;                    /* scroll if content overflows */
  vertical-align: top;               /* aligns nicely with number/delete button */
}

/* The delete button INSIDE the box */
.desc-close {
  position: absolute;
  top: 6px;
  right: 6px;
  width: 24px;
  height: 24px;
  padding: 0;
  border: 0;
  background: transparent;
  color: #d32f2f;
  font-size: 18px;
  line-height: 1;
  cursor: pointer;
  z-index: 2;               /* above the textarea */
  pointer-events: auto;     /* clickable even in draggable card */
}
.desc-close:hover { color: #b71c1c; background: rgba(211,47,47,.08); }
.desc-inline-delete.inside {
  position: absolute;    /* wherever you place it in the header */
  right: 6px;
  top: 6px;
  z-index: 10;
  pointer-events: auto;
}
.inner-controls, .desc-inline-row, .form-row button {
  pointer-events: auto;
}
.form-builder-wrapper .desc-list .desc-row .desc-wrap {
  display: inline-block !important;   /* shrink-wraps to the textarea */
  width: auto !important;
  max-width: none !important;
  overflow: visible !important;
}


.form-builder-wrapper .desc-list .desc-row .desc-input {
  max-width: none !important;   /* overrides the inline 100% */
  width: auto !important;
  resize: both !important;
  display: inline-block !important; /* lets width changes be visible */
}

/* The second column should size to content, not clamp to 1fr */
.form-builder-wrapper .desc-list .desc-row {
  grid-template-columns: 1.4ch max-content !important; /* number | box */
}

/* Make sure nothing clips the resize handles */
.form-builder-wrapper .form-row.desc-box {
  position: static !important;
  overflow: visible !important;
}
/* Let the card expand */
.form-row.desc-box,
.form-row.description-field {
  overflow: visible !important;
}

/* Kill any leftover 100% width / vertical-only resize */
.form-row.desc-box .desc-input,
.form-row.description-field .desc-input {
  display: inline-block !important;
  width: auto !important;
  max-width: none !important;
  min-width: 150px;
  min-height: 40px;
  resize: both !important;   /* ← horizontal + vertical */
  overflow: auto;
}

/* If anything else still sets textareas in desc rows: */
.form-row.desc-box textarea,
.form-row.description-field textarea {
  width: auto !important;
  max-width: none !important;
  resize: both !important;
}

/* Ensure the grid lets column 2 grow to the textarea’s intrinsic width */
.desc-row { 
  display: grid !important;
  grid-template-columns: 1.4ch max-content !important;  /* number | box */
  align-items: start;
  gap: 8px;
}

/* Nuke the global overflow clamp just for safety */

.form-row.desc-box,
.form-row.description-field {
  overflow: visible !important;
  max-width: none !important;  /* allow horizontal growth */
  width: auto !important;
}
.checkbox-field { padding-right: 6px; }
/* Let the textarea own its size */
.form-row.desc-box .desc-input,
.form-row.description-field .desc-input {
  display: inline-block !important;
  width: auto !important;
  max-width: none !important;
  min-width: 150px !important;
  min-height: 40px !important;
  resize: both !important;
  overflow: auto !important;
  box-sizing: border-box !important;
}
.add-pill {
  display:inline-block;
  padding:6px 12px;
  border:1px dashed #4caf50;   /* green border */
  border-radius:999px;
  font-weight:600;
  background:#e8f5e9;          /* light green background */
  color:#2e7d32;               /* dark green text */
  cursor:pointer;
  transition:all .2s ease;
}

.add-pill:hover {
  background:#c8e6c9;          /* darker on hover */
  border-color:#2e7d32;
  color:#1b5e20;
}

/* Field container: keep content inside the box */
.checkbox-field{
  display:flex;
  flex-direction:column;
  gap:8px;
  box-sizing:border-box;
  overflow:hidden;            /* ✅ keeps the top-right “×” inside */
}

/* Header: [drag+label] | centered Add | right-side delete */
.checkbox-header{
  display:grid;
  grid-template-columns:auto 1fr auto;
  align-items:center;
  column-gap:12px;
  padding:4px 6px 0 0;        /* tiny right padding so × never hugs border */
}

.checkbox-header .left{
  display:flex; align-items:center; gap:8px;
}

/* Center the Add button in the header row */
.checkbox-header .add-pill{ justify-self:center; }

/* Delete (whole field) button */
.checkbox-header .row-del{
  all:unset;
  cursor:pointer;
  color:#d32f2f;
  font-size:18px;
  line-height:1;
}

/* Options wrap nicely */
.checkbox-options-row{
  display:flex;
  flex-wrap:wrap;
  align-items:center;
  column-gap:12px;
  row-gap:8px;
  min-width:0;               /* prevents flex children from stretching container */
}

/* Option chip */
.opt-chip{
  display:inline-flex;
  align-items:center;
  gap:6px;
  padding:4px 8px;
  border:1px solid #e0e0e0;
  border-radius:12px;
  background:#fff;
}

/* Option delete (×) */
.opt-chip button{
  all:unset;
  cursor:pointer;
  color:#d32f2f;
  line-height:1;
}
.resizable-chip {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 4px 8px;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  background: #fff;

  resize: both;         /* 👈 allow horizontal + vertical resize */
  overflow: auto;       /* scrollbars if content overflows */
  min-width: 80px;
  min-height: 32px;     /* so it doesn't collapse vertically */
  max-width: 400px;     /* optional */
  max-height: 120px;    /* optional */
}

/* Label can grow with height */
.resizable-label {
  display: inline-block;
  min-width: 40px;
  min-height: 20px;
  max-width: 100%;
  max-height: 100%;
  outline: none;
  white-space: normal;   /* 👈 allow wrapping when taller */
  overflow: auto;
}
checkbox-header{
  position: relative;
  z-index: 1;
  padding: 4px 8px 0 4px;
}

/* Make the drag-handle visible and easy to grab */
.drag-handle{
  display:inline-flex;
  align-items:center;
  justify-content:center;
  width:24px; height:24px;
  font-size:18px; line-height:1;
  cursor:move; user-select:none; color:#444;
  border-radius:4px;
}
.drag-handle:hover{ background:#f2f2f2; }

/* Ensure the field never lets buttons spill out */
.checkbox-field{ overflow:hidden; }

/* Option chips layout (your current inline styles are fine too) */
.checkbox-options-row{
  display:flex; flex-wrap:wrap; align-items:center;
  column-gap:12px; row-gap:8px; min-width:0;
}

/* (Optional) nicer “Add option” look */
.add-pill{
  background:#fff;
  border:1px dashed #7fb47a;
  color:#2e7d32;
  border-radius:999px;
  padding:6px 12px;
  font-weight:600; cursor:pointer;
}
.data-grid-matrix .dg-grid {
  display: grid;
  gap: 12px;                /* space between cells */
  grid-auto-rows: minmax(100px, auto);
}

.data-grid-matrix .dg-cell {
  min-height: 120px;
}

.data-grid-matrix .dg-cell-drop {
  height: 100%;
}
.dg-cell.bordered { outline: 1px dashed #bdbdbd; }
.data-grid-matrix { display:flex; flex-direction:column; gap:10px; }
.dg-toolbar { display:flex; align-items:center; gap:10px; }
.dg-toolbar .spacer { flex:1 1 auto; }

.dg-grid { display:grid;
    gap: var(--gap, 12px);
  }

.dg-cell { position:relative; }

.dg-cell-drop{
  /* the “marked” box to fill */
  min-height: var(--cellH, 140px);
  padding: 10px;
  border: 1px dashed #d9dee6;        /* keep dashed for the mark */
  border-radius: 12px;
  background: #fff;
  display: flex;                      /* so child can stretch */
}
.dg-cell-drop.has-content { border-style: solid; border-color: #e8eaee; }

.dg-placeholder {
  position:relative;
  display:flex;
  align-items:center;
  gap:12px;
  width:100%;
  height:100%;
  padding:18px;
  color:#556371;
  background:#f6f7f8;
  border:1px dashed #c9d1d9;
  border-radius:10px;
  box-sizing:border-box;
}
.dg-placeholder .kebab {
  position:absolute;
  top:50%;
  right:10px;
  transform:translateY(-50%);
  opacity:.85;
}

.dg-item { cursor:grab; }
.dg-item-card {
  background:#fff;
  border:1px solid #e2e8f0;
  border-radius:8px;
  padding:10px 12px;
  margin:6px 0;
  box-shadow:0 1px 0 rgba(0,0,0,.03);
}
.dg-item-card .title { font-weight:600; }
.dg-item-card .sub { font-size:12px; color:#6b7280; }

.cdk-drop-list.cdk-drop-list-dragging .dg-placeholder {
  border-color:#90caf9;
  background:#f1f8ff;
}


.dg-item-card .title { font-weight: 600; }
.dg-item-card .sub { font-size: 12px; color: #666; }

.dg-cell .empty { color: #666; font-size: 13px; opacity: .85; }
.dg-cell-menu { position: absolute; top: 2px; right: 2px; }

.add-pill:hover{ background:#f1faf0; }
/* Never let PDF tweaks impact dialog overlays */
.cdk-overlay-container .mat-mdc-form-field,
.cdk-overlay-container .mat-mdc-text-field-wrapper,
.cdk-overlay-container .mat-mdc-form-field-infix,
.cdk-overlay-container .mdc-notched-outline,
.cdk-overlay-container .mat-mdc-form-field-subscript-wrapper {
  all: revert;
}
/* --- CLEAN, BORDERLESS GRID --- */

/* kill the dashed outline entirely */
.dg-cell.bordered { outline: none !important; }

/* cells should not enforce a height */
.data-grid-matrix .dg-cell { position: relative; min-height: 120px; }
.data-grid-matrix .dg-cell-drop {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 100px;
  display: block;
  padding: 0;
}
.dg-empty {
  width: 100%; height: 100%;
  display:flex; align-items:center; justify-content:center;
  background:#f6f7f8; border:1px dashed #cfd6dc; border-radius:10px;
  color:#556371; padding:16px; box-sizing:border-box;
}

.dg-tile {
  width: 100%; height: 100%;
  box-sizing: border-box;
  background:#fff; border:1px solid #e2e8f0; border-radius:10px; padding:12px;
  display:flex; flex-direction:column; justify-content:center;
}

.tile-input, .tile-textarea { width:100%; box-sizing:border-box; }
.cdk-drag-preview { pointer-events: none; } /* smoother drag */

/* hide the “Drag and Drop a form component” placeholder */
.dg-placeholder { display: none !important; }

/* let content define the size */
.dg-item { cursor: grab; display: block; }
.dg-item-card {
  width: auto;
  height: auto;
  padding: 0;                 /* remove card padding so native field size wins */
  border: 0;                  /* no frame around dropped content */
  box-shadow: none;
  background: transparent;
}

/* optional: a *very* subtle cue only while dragging over an empty cell */
.cdk-drop-list.cdk-drop-list-dragging .dg-cell-drop:empty {
  outline: 1px dashed rgba(0,0,0,.12);
  border-radius: 8px;
  min-height: 40px;           /* tiny target so it's still droppable */
}
.data-grid-matrix { width: 100%; }

.dg-toolbar {
  display: flex; align-items: center; gap: 8px; margin-bottom: 8px;
  .spacer { flex: 1; }
}

.dg-grid {
  display: grid;
}

.dg-cell { /* outer cell (optional border toggle) */
  &.bordered { outline: 1px dashed #e0e0e0; outline-offset: -4px; border-radius: 8px; }
}


.dg-cell-drop {
  background: #fff;
  border: 2px dashed #cfd8dc;       /* dotted/dashed look */
  border-radius: 10px;
  display: flex; align-items: center; justify-content: center;
  position: relative;
  min-height: 100px;
  transition: box-shadow .12s ease;
}
.dg-cell-drop.cdk-drop-list-dragging, .dg-cell-drop:hover {
  box-shadow: 0 0 0 2px rgba(33,150,243,.15) inset;
}

/* empty placeholder */
.dg-empty .pill {
  padding: 12px 16px;
  border-radius: 9999px;
  border: none;
  background: #18a0a6;
  color: #fff;
  opacity: .92;
  cursor: default;
}

.tile-head { display: flex; align-items: center; justify-content: space-between; margin-bottom: 6px; }
.tile-title { font-size: 12px; font-weight: 600; color: #455a64; }
.tile-body { font-size: 12px; color: #263238; }
.tile-input, .tile-textarea { width: 100%; box-sizing: border-box; }

/* nice “over any cell” cue */
.cdk-drag-preview { z-index: 10000; }
.page-surface.fill-mode {
  .field-wrapper {
    position: relative !important;
    left: auto !important;
    top: auto !important;
    width: 100% !important;
    margin: 0 0 12px 0 !important;
    transform: none !important;
  }

  /* if you ever bind cdkDrag on field-wrapper, disable the cursor/drag look */
  .field-wrapper[cdkdrag] {
    cursor: default;
  }
}
/* Keep one handle in the same place for every field */
.row-handle {
  position: absolute;
  top: 6px;
  left: 6px;
  width: 24px;
  height: 24px;
  line-height: 24px;
  border: 0;
  background: #fff;
  border-radius: 6px;
  box-shadow: 0 0 0 1px #d0d0d0;
  cursor: move;
  z-index: 5;
}
.inline-resize-wrap { min-width: 0; }

/* keep the date input inside its column, don’t overflow into the label column */
.date-input-shell { max-width: 100%; }

/* if anything still overlaps, keep the text on top */
.editable-label { position: relative; z-index: 2; }
/* hide the inline handle in the date row so the grid is truly 2-column */
.date-inline-drag { display: none !important; }

/* make sure the control can shrink inside its grid cell */
.inline-resize-wrap { min-width: 0; }
.date-input-shell { max-width: 100%; }

/* keep the label on top just in case */
.editable-label { position: relative; z-index: 2; }
/* inner signature box is the thing we resize */
.sig-resize {
  position: relative;
  resize: both;          /* native resize handle */
  overflow: hidden;      /* required for resize */
  min-width: 180px;
  min-height: 80px;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0,0,0,.08);
}

/* optional dashed guide while resizing */
.sig-resize:focus-within,
.sig-resize:active {
  outline: 2px dashed #1e88e5;
  outline-offset: 4px;
}

/* canvas always fills the shell; bitmap size handled in TS */
.sig-resize > canvas {
  width: 100% !important;
  height: 100% !important;
  display: block;
}

/* make sure the clear button sits above the canvas */
.signature-pad-container .clear-sign-btn {
  pointer-events: auto;
  z-index: 5;
}
.title-input-shell {
  position: relative;
  display: inline-block;
  overflow: hidden;         /* keeps grips inside */
  border-radius: 6px;
}
.title-input-shell .editable-div {
  width: 100%;
  height: 100%;
  padding: 6px 10px;
  box-sizing: border-box;
}

.corner-grip.inner,
.edge-grip.inner {
  position: absolute;
  width: 10px; height: 10px;
  background: #fff;
  border: 1px solid #9e9e9e;
  z-index: 3;
  pointer-events: auto;
}

/* corners (exactly where you marked) */
.corner-grip.inner.nw { left:4px;  top:4px;    cursor:nwse-resize; }
.corner-grip.inner.ne { right:4px; top:4px;    cursor:nesw-resize; }
.corner-grip.inner.sw { left:4px;  bottom:4px; cursor:nesw-resize; }
.corner-grip.inner.se { right:4px; bottom:4px; cursor:nwse-resize; }

/* optional side grips */
.edge-grip.inner.left  { left:2px;  top:50%; transform:translateY(-50%); width:6px; cursor:ew-resize; }
.edge-grip.inner.right { right:2px; top:50%; transform:translateY(-50%); width:6px; cursor:ew-resize; }

.sig-input-shell { position: relative; display: inline-block; }
.sig-input-shell canvas { display: block; width: 100%; height: 100%; }
.sig-input-shell:focus, .sig-input-shell:focus-within,
.editable-label:focus { outline: none; }

.grip { position:absolute; width:10px; height:10px; border:1px solid #888; background:#fff; }
.grip-se { right:2px;  bottom:2px;  cursor:nwse-resize; }
.grip-sw { left:2px;   bottom:2px;  cursor:nesw-resize; }
.grip-e  { right:2px;  top:50%; transform:translateY(-50%); width:6px; height:20px; cursor:ew-resize; }
.grip-w  { left:2px;   top:50%; transform:translateY(-50%); width:6px; height:20px; cursor:ew-resize; }
.dg-grid {
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-columns: repeat(auto-fill, minmax(0, 1fr));
  grid-auto-rows: 1fr;
  gap: 12px;
}
.dg-grid > * {
  min-width: 0;
  min-height: 0;
}
/* ✅ Final override: free resize only for description textareas */
.form-builder-wrapper .form-row.desc-box textarea.desc-input,
.form-builder-wrapper .form-row.description-field textarea.desc-input {
  all: unset;                  /* reset EVERYTHING first */
  resize: both !important;     /* allow horizontal + vertical resize */
  min-width: 120px;
  min-height: 60px;
  width: auto;
  height: auto;
  max-width: none;
  max-height: none;
  display: inline-block;
  box-sizing: border-box;
  padding: 6px 10px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 14px;
  font-family: inherit;
  line-height: 1.4;
  overflow: auto;
  background: #fff;
  color: #333;
}

.desc-box .desc-input {
  flex: 0 0 auto !important;
  display: inline-block !important;
  resize: both !important;
  overflow: auto !important;
  min-width: 80px;
  min-height: 40px;
  max-width: none;
  max-height: none;
}
.desc-box {
  flex: 0 0 auto !important;
  align-items: flex-start;
}

.desc-row{ display:flex !important; align-items:flex-start !important; gap:8px !important; }
.desc-no{ flex:0 0 auto !important; line-height:28px !important; }
.form-row.no-outer-handles > .row-handle,
.form-row.no-outer-handles > .field-header {
  display: none !important;
}
/* force tel label to be in-flow, not absolute */
.tel-inline-row .editable-label {
  position: static !important;
  display: inline-block;
  margin: 0;
  white-space: nowrap;
}

/* keep the tel row truly single-line */
.tel-inline-row {
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: nowrap;
  width: 100%;
}
.grid-item-shell { position: relative; }

.drag-handle {
  position: absolute; left: 6px; top: 6px;
  width: 18px; height: 18px; border: 1px solid rgba(0,0,0,.2);
  border-radius: 3px; cursor: grab; user-select: none;
  display: grid; place-items: center; background: #fff;
}

.span-grip {
  position: absolute; right: -6px; bottom: 50%;
  transform: translateY(50%);
  width: 10px; height: 10px; border: 1px solid #999;
  background: #fff; border-radius: 2px; cursor: ew-resize;
}